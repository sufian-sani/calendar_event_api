openapi: 3.0.3
info:
  title: Calendar Events API Swagger Editor
  description: RESTful API for managing calendar events with recurrence, mock authentication included.
  version: 1.0.0
servers:
  - url: http://localhost:3000
    description: Local server

security:
  - ApiKeyAuth: []

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-KEY
  schemas:
    Event:
      type: object
      properties:
        _id:
          type: string
          description: Event ID (MongoDB ObjectId)
        title:
          type: string
          description: Title of the event
        description:
          type: string
          description: Event description
        startTime:
          type: string
          format: date-time
          description: Event start date/time (ISO8601)
        endTime:
          type: string
          format: date-time
          description: Event end date/time (ISO8601)
        participants:
          type: array
          items:
            type: string
          description: Array of participant user IDs
        creator:
          type: string
          description: User ID of the event creator
        recurrence:
          type: string
          enum: [none, daily, weekly, monthly]
          description: Recurrence pattern
        parentEvent:
          type: string
          nullable: true
          description: ID of the base event if this is an override event
        recurrenceUpdateOption:
          type: string
          enum: [thisEvent, thisAndFollowing, allEvents]
          nullable: true
          description: Recurrence update option if override event
        cancelled:
          type: boolean
          nullable: true
          description: If the event occurrence is cancelled (for override events)
      required:
        - title
        - startTime
        - endTime
        - creator
        - recurrence

    EventCreationRequest:
      type: object
      properties:
        title:
          type: string
          example: Team Meeting
        description:
          type: string
          example: Weekly sync-up meeting
        startTime:
          type: string
          format: date-time
          example: "2025-08-15T10:00:00Z"
        endTime:
          type: string
          format: date-time
          example: "2025-08-15T11:00:00Z"
        participants:
          type: array
          items:
            type: string
          example: ["user123", "user456"]
        recurrence:
          type: string
          enum: [none, daily, weekly, monthly]
          example: weekly
      required:
        - title
        - startTime
        - endTime

    EventUpdateRequest:
      type: object
      properties:
        title:
          type: string
          example: Updated Meeting Title
        description:
          type: string
          example: Updated description
        startTime:
          type: string
          format: date-time
          example: "2025-08-15T12:00:00Z"
        endTime:
          type: string
          format: date-time
          example: "2025-08-15T13:00:00Z"
        addParticipants:
          type: array
          items:
            type: string
          example: ["user789"]
        removeParticipants:
          type: array
          items:
            type: string
          example: ["user456"]
        recurrenceUpdateOption:
          type: string
          enum: [thisEvent, thisAndFollowing, allEvents]
          example: thisEvent

    EventDeleteRequest:
      type: object
      properties:
        recurrenceDeleteOption:
          type: string
          enum: [thisEvent, thisAndFollowing, allEvents]
          example: thisEvent
      required:
        - recurrenceDeleteOption

    MyEventsResponseItem:
      type: object
      properties:
        seriesId:
          type: string
          description: Base event ID for the series
        baseEvent:
          $ref: '#/components/schemas/Event'
        overrides:
          type: array
          items:
            $ref: '#/components/schemas/Event'

paths:
  /events:
    post:
      summary: Create a new event
      tags:
        - Events
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventCreationRequest'
      responses:
        '201':
          description: Event created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '400':
          description: Bad request (missing or invalid fields)
        '500':
          description: Server error

  /events/{eventId}:
    put:
      summary: Update an event or event series with recurrence options
      tags:
        - Events
      parameters:
        - in: path
          name: eventId
          schema:
            type: string
          required: true
          description: ID of the event to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventUpdateRequest'
      responses:
        '200':
          description: Event updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '400':
          description: Bad request (invalid recurrenceUpdateOption)
        '403':
          description: Forbidden - not authorized to edit event
        '404':
          description: Event not found
        '500':
          description: Server error

    delete:
      summary: Delete an event or event series with recurrence options
      tags:
        - Events
      parameters:
        - in: path
          name: eventId
          schema:
            type: string
          required: true
          description: ID of the event to delete
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventDeleteRequest'
      responses:
        '200':
          description: Event(s) deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Event deleted
        '400':
          description: Bad request (invalid recurrenceDeleteOption)
        '403':
          description: Forbidden - not authorized to delete event
        '404':
          description: Event not found
        '500':
          description: Server error

  /myevents:
    get:
      summary: Get all events for the authenticated user (including recurring series and overrides)
      tags:
        - Events
      responses:
        '200':
          description: List of user's events grouped by series
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MyEventsResponseItem'
        '500':
          description: Server error

